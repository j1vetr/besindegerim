import { useState } from "react";
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";
import { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from "recharts";
import { Apple, Zap, TrendingUp, Target, Flame, Activity } from "lucide-react";
import type { CategoryGroup } from "@shared/schema";
import { Button } from "@/components/ui/button";

interface MacroCalculatorProps {
  categoryGroups?: CategoryGroup[];
  currentPath?: string;
}

interface MacroResult {
  calories: number;
  protein: { grams: number; calories: number; percentage: number };
  carbs: { grams: number; calories: number; percentage: number };
  fats: { grams: number; calories: number; percentage: number };
  goalName: string;
}

export default function MacroCalculator({ categoryGroups, currentPath }: MacroCalculatorProps) {
  const [weight, setWeight] = useState<number>(75);
  const [activity, setActivity] = useState<number>(1.55);
  const [customGoal, setCustomGoal] = useState<string>("maintain");
  const [result, setResult] = useState<MacroResult | null>(null);

  const activityLevels = [
    { value: 1.2, label: "Hareketsiz", desc: "Hi√ß egzersiz yok", icon: "üõãÔ∏è" },
    { value: 1.375, label: "Az Aktif", desc: "Haftada 1-3 g√ºn", icon: "üö∂" },
    { value: 1.55, label: "Orta Aktif", desc: "Haftada 3-5 g√ºn", icon: "üèÉ" },
    { value: 1.725, label: "√áok Aktif", desc: "Haftada 6-7 g√ºn", icon: "üí™" },
    { value: 1.9, label: "Ekstra Aktif", desc: "G√ºnde 2x egzersiz", icon: "üèãÔ∏è" }
  ];

  const presetGoals = [
    { 
      id: "fat-loss", 
      name: "Yaƒü Yakma", 
      icon: "üî•",
      color: "from-orange-500 to-red-600",
      protein: 40, // %
      carbs: 30,
      fats: 30,
      calorieAdjust: -500
    },
    { 
      id: "muscle-gain", 
      name: "Kas Yapma", 
      icon: "üí™",
      color: "from-purple-500 to-pink-600",
      protein: 30,
      carbs: 45,
      fats: 25,
      calorieAdjust: 300
    },
    { 
      id: "maintenance", 
      name: "Kilo Koruma", 
      icon: "‚öñÔ∏è",
      color: "from-green-500 to-emerald-600",
      protein: 30,
      carbs: 40,
      fats: 30,
      calorieAdjust: 0
    },
    { 
      id: "keto", 
      name: "Keto Diyeti", 
      icon: "ü•ë",
      color: "from-teal-500 to-cyan-600",
      protein: 25,
      carbs: 5,
      fats: 70,
      calorieAdjust: -300
    }
  ];

  const calculateMacros = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Calculate BMR (Mifflin-St Jeor - using average for simplicity)
    const bmr = 10 * weight + 6.25 * 170 - 5 * 30 + 5; // Simplified
    const tdee = bmr * activity;
    
    let calories: number;
    let proteinPercent: number;
    let carbsPercent: number;
    let fatsPercent: number;
    let goalName: string;

    if (customGoal === "lose") {
      calories = tdee - 500;
      proteinPercent = 40;
      carbsPercent = 30;
      fatsPercent = 30;
      goalName = "Kilo Verme";
    } else if (customGoal === "gain") {
      calories = tdee + 300;
      proteinPercent = 30;
      carbsPercent = 45;
      fatsPercent = 25;
      goalName = "Kilo Alma";
    } else {
      calories = tdee;
      proteinPercent = 30;
      carbsPercent = 40;
      fatsPercent = 30;
      goalName = "Kilo Koruma";
    }

    const proteinCals = (calories * proteinPercent) / 100;
    const carbsCals = (calories * carbsPercent) / 100;
    const fatsCals = (calories * fatsPercent) / 100;

    setResult({
      calories: Math.round(calories),
      protein: {
        grams: Math.round(proteinCals / 4),
        calories: Math.round(proteinCals),
        percentage: proteinPercent
      },
      carbs: {
        grams: Math.round(carbsCals / 4),
        calories: Math.round(carbsCals),
        percentage: carbsPercent
      },
      fats: {
        grams: Math.round(fatsCals / 9),
        calories: Math.round(fatsCals),
        percentage: fatsPercent
      },
      goalName
    });
  };

  const applyPreset = (preset: typeof presetGoals[0]) => {
    const bmr = 10 * weight + 6.25 * 170 - 5 * 30 + 5;
    const tdee = bmr * activity;
    const calories = tdee + preset.calorieAdjust;

    const proteinCals = (calories * preset.protein) / 100;
    const carbsCals = (calories * preset.carbs) / 100;
    const fatsCals = (calories * preset.fats) / 100;

    setResult({
      calories: Math.round(calories),
      protein: {
        grams: Math.round(proteinCals / 4),
        calories: Math.round(proteinCals),
        percentage: preset.protein
      },
      carbs: {
        grams: Math.round(carbsCals / 4),
        calories: Math.round(carbsCals),
        percentage: preset.carbs
      },
      fats: {
        grams: Math.round(fatsCals / 9),
        calories: Math.round(fatsCals),
        percentage: preset.fats
      },
      goalName: preset.name
    });
  };

  const pieData = result ? [
    { name: "Protein", value: result.protein.percentage, color: "#10b981" },
    { name: "Karbonhidrat", value: result.carbs.percentage, color: "#3b82f6" },
    { name: "Yaƒü", value: result.fats.percentage, color: "#f59e0b" }
  ] : [];

  return (
    <div className="min-h-screen flex flex-col bg-gradient-to-br from-slate-900 via-teal-900 to-slate-900">
      <Header categoryGroups={categoryGroups} currentPath={currentPath} />
      
      {/* Animated Background */}
      <div className="fixed inset-0 opacity-20 pointer-events-none">
        <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-gradient-to-r from-teal-400 to-cyan-600 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute bottom-1/4 right-1/4 w-96 h-96 bg-gradient-to-r from-cyan-400 to-blue-600 rounded-full blur-3xl animate-pulse delay-1000"></div>
      </div>

      <main className="flex-1 py-12 relative z-10">
        <div className="max-w-7xl mx-auto px-4">
          {/* Breadcrumb */}
          <div className="mb-6">
            <a href="/hesaplayicilar" className="text-teal-400 hover:text-teal-300 font-medium text-sm backdrop-blur-sm bg-white/5 px-4 py-2 rounded-full inline-block border border-teal-500/30">
              ‚Üê T√ºm Hesaplayƒ±cƒ±lar
            </a>
          </div>

          {/* Hero */}
          <div className="text-center mb-12">
            <div className="inline-flex items-center gap-2 bg-gradient-to-r from-teal-500 to-cyan-600 text-white rounded-full px-6 py-3 mb-6 shadow-2xl shadow-teal-500/50 border border-teal-400/30">
              <Apple className="w-6 h-6 animate-pulse" />
              <span className="font-bold">Ki≈üiselle≈ütirilmi≈ü Makro Daƒüƒ±lƒ±mƒ±</span>
            </div>
            <h1 className="text-5xl md:text-6xl lg:text-7xl font-black mb-6 bg-gradient-to-r from-teal-400 via-cyan-500 to-blue-400 bg-clip-text text-transparent drop-shadow-2xl">
              Makro Besin Hesaplayƒ±cƒ±
            </h1>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              Hedefinize √∂zel protein, karbonhidrat ve yaƒü oranlarƒ±nƒ±zƒ± hesaplayƒ±n
            </p>
          </div>

          <div className="grid lg:grid-cols-2 gap-8 mb-16">
            {/* Calculator Form */}
            <div className="backdrop-blur-2xl bg-white/10 rounded-3xl border border-white/20 shadow-2xl p-8 hover:bg-white/15 transition-all duration-300">
              <div className="flex items-center gap-3 mb-8">
                <div className="p-3 bg-gradient-to-r from-teal-500 to-cyan-600 rounded-2xl shadow-lg shadow-teal-500/50">
                  <Apple className="w-7 h-7 text-white" />
                </div>
                <h2 className="text-3xl font-black text-white">Bilgilerinizi Girin</h2>
              </div>

              <form onSubmit={calculateMacros} className="space-y-8">
                {/* Weight */}
                <div className="space-y-4">
                  <div className="flex justify-between items-center">
                    <label className="text-lg font-bold text-white">Kilo (kg)</label>
                    <span className="text-4xl font-black bg-gradient-to-r from-teal-400 to-cyan-500 bg-clip-text text-transparent">
                      {weight}
                    </span>
                  </div>
                  <input
                    type="range"
                    min="40"
                    max="150"
                    value={weight}
                    onChange={(e) => setWeight(parseInt(e.target.value))}
                    className="w-full h-3 bg-gradient-to-r from-teal-500/20 to-cyan-600/20 rounded-full appearance-none cursor-pointer [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:w-7 [&::-webkit-slider-thumb]:h-7 [&::-webkit-slider-thumb]:bg-gradient-to-r [&::-webkit-slider-thumb]:from-teal-400 [&::-webkit-slider-thumb]:to-cyan-600 [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:shadow-xl [&::-webkit-slider-thumb]:shadow-teal-500/50 [&::-webkit-slider-thumb]:cursor-pointer hover:[&::-webkit-slider-thumb]:scale-110 transition-all"
                  />
                  <div className="flex justify-between text-xs text-gray-400 px-1">
                    <span>40 kg</span>
                    <span>150 kg</span>
                  </div>
                </div>

                {/* Activity Level */}
                <div className="space-y-4">
                  <label className="text-lg font-bold text-white flex items-center gap-2">
                    <Activity className="w-5 h-5 text-cyan-400" />
                    Aktivite Seviyesi
                  </label>
                  <div className="grid grid-cols-1 gap-3">
                    {activityLevels.map((level) => (
                      <button
                        key={level.value}
                        type="button"
                        onClick={() => setActivity(level.value)}
                        className={`p-4 rounded-xl text-left transition-all duration-300 flex items-center gap-4 ${
                          activity === level.value
                            ? "bg-gradient-to-br from-teal-500 to-cyan-600 text-white shadow-2xl shadow-teal-500/50 scale-105"
                            : "bg-white/5 text-gray-300 hover:bg-white/10 border border-white/10"
                        }`}
                      >
                        <span className="text-2xl">{level.icon}</span>
                        <div className="flex-1">
                          <div className="font-bold">{level.label}</div>
                          <div className="text-xs opacity-75">{level.desc}</div>
                        </div>
                      </button>
                    ))}
                  </div>
                </div>

                {/* Goal */}
                <div className="space-y-4">
                  <label className="text-lg font-bold text-white flex items-center gap-2">
                    <Target className="w-5 h-5 text-blue-400" />
                    Hedefiniz
                  </label>
                  <div className="grid grid-cols-1 gap-3">
                    <button
                      type="button"
                      onClick={() => setCustomGoal("lose")}
                      className={`p-4 rounded-xl text-left transition-all duration-300 ${
                        customGoal === "lose"
                          ? "bg-gradient-to-br from-orange-500 to-red-600 text-white shadow-2xl shadow-orange-500/50 scale-105"
                          : "bg-white/5 text-gray-300 hover:bg-white/10 border border-white/10"
                      }`}
                    >
                      <div className="font-bold">üî• Kilo Vermek</div>
                    </button>
                    <button
                      type="button"
                      onClick={() => setCustomGoal("maintain")}
                      className={`p-4 rounded-xl text-left transition-all duration-300 ${
                        customGoal === "maintain"
                          ? "bg-gradient-to-br from-green-500 to-emerald-600 text-white shadow-2xl shadow-green-500/50 scale-105"
                          : "bg-white/5 text-gray-300 hover:bg-white/10 border border-white/10"
                      }`}
                    >
                      <div className="font-bold">‚öñÔ∏è Kilonu Korumak</div>
                    </button>
                    <button
                      type="button"
                      onClick={() => setCustomGoal("gain")}
                      className={`p-4 rounded-xl text-left transition-all duration-300 ${
                        customGoal === "gain"
                          ? "bg-gradient-to-br from-purple-500 to-pink-600 text-white shadow-2xl shadow-purple-500/50 scale-105"
                          : "bg-white/5 text-gray-300 hover:bg-white/10 border border-white/10"
                      }`}
                    >
                      <div className="font-bold">üí™ Kilo Almak</div>
                    </button>
                  </div>
                </div>

                <Button
                  type="submit"
                  className="w-full h-16 text-xl font-black bg-gradient-to-r from-teal-500 via-cyan-600 to-blue-500 hover:from-teal-600 hover:via-cyan-700 hover:to-blue-600 shadow-2xl shadow-teal-500/50 rounded-2xl border-2 border-teal-400/50 hover:scale-105 transition-all duration-300"
                  data-testid="button-calculate-macros"
                >
                  <Zap className="w-6 h-6 mr-2 animate-pulse" />
                  Makrolarƒ±mƒ± Hesapla
                </Button>
              </form>

              {/* Preset Goals */}
              <div className="mt-8 pt-8 border-t border-white/10">
                <h3 className="text-xl font-bold text-white mb-4 flex items-center gap-2">
                  <Flame className="w-5 h-5 text-orange-400" />
                  Hƒ±zlƒ± Hedef Se√ßimi
                </h3>
                <div className="grid grid-cols-2 gap-3">
                  {presetGoals.map((preset) => (
                    <button
                      key={preset.id}
                      type="button"
                      onClick={() => applyPreset(preset)}
                      className={`p-4 rounded-xl bg-gradient-to-br ${preset.color} text-white shadow-xl hover:scale-105 transition-all duration-300 border border-white/20`}
                      data-testid={`button-preset-${preset.id}`}
                    >
                      <div className="text-2xl mb-2">{preset.icon}</div>
                      <div className="font-bold text-sm">{preset.name}</div>
                    </button>
                  ))}
                </div>
              </div>
            </div>

            {/* Results */}
            {result && (
              <div className="space-y-6">
                {/* Total Calories */}
                <div className="backdrop-blur-2xl bg-gradient-to-br from-teal-500/20 to-cyan-600/20 rounded-3xl border border-teal-400/30 p-8 shadow-2xl hover:scale-105 transition-all duration-300">
                  <div className="flex items-center gap-3 mb-4">
                    <Flame className="w-8 h-8 text-teal-400 animate-pulse" />
                    <h3 className="text-2xl font-black text-white">G√ºnl√ºk Kalori</h3>
                  </div>
                  <div className="text-7xl font-black bg-gradient-to-r from-teal-300 to-cyan-400 bg-clip-text text-transparent mb-2" data-testid="text-total-calories">
                    {result.calories}
                  </div>
                  <p className="text-gray-300 text-sm">{result.goalName} i√ßin</p>
                </div>

                {/* Pie Chart */}
                <div className="backdrop-blur-2xl bg-white/10 rounded-3xl border border-white/20 p-8 shadow-2xl">
                  <h3 className="text-2xl font-black text-white mb-6 text-center">Makro Daƒüƒ±lƒ±mƒ±</h3>
                  <ResponsiveContainer width="100%" height={300}>
                    <PieChart>
                      <Pie
                        data={pieData}
                        cx="50%"
                        cy="50%"
                        labelLine={false}
                        label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
                        outerRadius={100}
                        fill="#8884d8"
                        dataKey="value"
                      >
                        {pieData.map((entry, index) => (
                          <Cell key={`cell-${index}`} fill={entry.color} />
                        ))}
                      </Pie>
                      <Tooltip />
                    </PieChart>
                  </ResponsiveContainer>
                </div>

                {/* Macro Details */}
                <div className="backdrop-blur-2xl bg-white/10 rounded-3xl border border-white/20 p-8 shadow-2xl">
                  <h3 className="text-2xl font-black text-white mb-6">Detaylƒ± Makrolar</h3>
                  
                  {/* Protein */}
                  <div className="mb-6 p-6 bg-gradient-to-br from-green-500/20 to-emerald-600/20 rounded-2xl border border-green-400/30">
                    <div className="flex justify-between items-center mb-3">
                      <span className="text-lg font-bold text-green-300">ü•© Protein</span>
                      <span className="text-sm text-green-400">{result.protein.percentage}%</span>
                    </div>
                    <div className="text-4xl font-black text-green-300 mb-1" data-testid="text-protein-grams">
                      {result.protein.grams}g
                    </div>
                    <div className="text-sm text-gray-400" data-testid="text-protein-calories">
                      {result.protein.calories} kalori
                    </div>
                  </div>

                  {/* Carbs */}
                  <div className="mb-6 p-6 bg-gradient-to-br from-blue-500/20 to-indigo-600/20 rounded-2xl border border-blue-400/30">
                    <div className="flex justify-between items-center mb-3">
                      <span className="text-lg font-bold text-blue-300">üçû Karbonhidrat</span>
                      <span className="text-sm text-blue-400">{result.carbs.percentage}%</span>
                    </div>
                    <div className="text-4xl font-black text-blue-300 mb-1" data-testid="text-carbs-grams">
                      {result.carbs.grams}g
                    </div>
                    <div className="text-sm text-gray-400" data-testid="text-carbs-calories">
                      {result.carbs.calories} kalori
                    </div>
                  </div>

                  {/* Fats */}
                  <div className="p-6 bg-gradient-to-br from-orange-500/20 to-yellow-600/20 rounded-2xl border border-orange-400/30">
                    <div className="flex justify-between items-center mb-3">
                      <span className="text-lg font-bold text-orange-300">ü•ë Yaƒü</span>
                      <span className="text-sm text-orange-400">{result.fats.percentage}%</span>
                    </div>
                    <div className="text-4xl font-black text-orange-300 mb-1" data-testid="text-fats-grams">
                      {result.fats.grams}g
                    </div>
                    <div className="text-sm text-gray-400" data-testid="text-fats-calories">
                      {result.fats.calories} kalori
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>

          {/* SEO Content */}
          <article className="prose prose-lg prose-invert max-w-none">
            <div className="backdrop-blur-2xl bg-white/5 rounded-3xl border border-white/10 p-12">
              <h2 className="text-4xl font-black text-white mb-6 bg-gradient-to-r from-teal-400 to-cyan-500 bg-clip-text text-transparent">
                Makro Besinler Nedir ve Neden √ñnemlidir?
              </h2>
              
              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                Makro besinler (makron√ºtrientler), v√ºcudumuzun enerji i√ßin kullandƒ±ƒüƒ± √º√ß ana besin grubudur: protein, karbonhidrat ve yaƒü. 
                Her birinin kendine √∂zg√º i≈ülevleri vardƒ±r ve dengeli beslenme i√ßin doƒüru oranlarda t√ºketilmeleri gerekir. Protein kas yapƒ±mƒ± 
                ve onarƒ±mƒ± i√ßin, karbonhidrat enerji i√ßin, yaƒü ise hormon √ºretimi ve h√ºcre saƒülƒ±ƒüƒ± i√ßin gereklidir. G√ºnl√ºk kalori alƒ±mƒ±nƒ±zƒ±n 
                bu √º√ß makro besin arasƒ±nda nasƒ±l daƒüƒ±ldƒ±ƒüƒ±, hedefinize (kilo verme, kas yapma veya kilo koruma) ula≈ümanƒ±zda kritik rol oynar.
              </p>

              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                Kalori saymanƒ±n √∂tesinde, makro besin daƒüƒ±lƒ±mƒ± v√ºcut kompozisyonunuzu doƒürudan etkiler. Aynƒ± kalori miktarƒ±nƒ± farklƒ± makro 
                oranlarƒ±yla t√ºkettiƒüinizde, v√ºcudunuz tamamen farklƒ± tepkiler verebilir. √ñrneƒüin, y√ºksek proteinli bir diyet kas kaybƒ±nƒ± √∂nler 
                ve tokluk hissi saƒülar, y√ºksek karbonhidratlƒ± bir diyet ise antrenman performansƒ±nƒ± artƒ±rƒ±r, y√ºksek yaƒülƒ± ketojenik diyetler 
                ise ins√ºlin direncini azaltabilir. Bu nedenle, sadece "ne kadar yediƒüiniz" deƒüil, "ne yediƒüiniz" de √∂nemlidir.
              </p>

              <h3 className="text-3xl font-bold text-white mt-10 mb-4 bg-gradient-to-r from-green-400 to-emerald-500 bg-clip-text text-transparent">
                Makro Besinlerin √ñzellikleri ve ƒ∞≈ülevleri
              </h3>
              
              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                <strong className="text-green-400">Protein (1g = 4 kalori):</strong> Amino asitlerden olu≈üur ve kas, kemik, cilt, sa√ß, 
                enzim ve hormonlarƒ±n yapƒ± ta≈üƒ±dƒ±r. V√ºcut 20 amino asit kullanƒ±r, bunlarƒ±n 9'u esansiyel amino asittir (v√ºcut √ºretemez, 
                besinlerle alƒ±nmalƒ±dƒ±r). Protein kas sentezi i√ßin kritiktir ve tokluk hissi saƒülar (en y√ºksek termal etkiye sahip makrodur). 
                Hayvansal kaynaklar (et, balƒ±k, yumurta, s√ºt) tam protein iken, bitkisel kaynaklar (baklagiller, tahƒ±llar) genellikle 
                kombinasyonla tamamlanmalƒ±dƒ±r. G√ºnl√ºk ihtiya√ß v√ºcut aƒüƒ±rlƒ±ƒüƒ±nƒ±n kg ba≈üƒ±na 1.6-2.5g arasƒ±nda deƒüi≈üir.
              </p>

              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                <strong className="text-blue-400">Karbonhidrat (1g = 4 kalori):</strong> V√ºcudun tercih ettiƒüi birincil enerji kaynaƒüƒ±dƒ±r. 
                Glikoz olarak depolanƒ±r (kaslarda glikojen, karaciƒüerde glikojen) ve yoƒüun egzersizler i√ßin gereklidir. Basit karbonhidratlar 
                (≈üeker, beyaz un) hƒ±zlƒ± enerji saƒülarken, kompleks karbonhidratlar (tam tahƒ±llar, sebzeler) yava≈ü salƒ±nƒ±mlƒ± enerji ve lif 
                saƒülar. D√º≈ü√ºk karbonhidrat diyetleri (keto) yaƒü yakƒ±mƒ±nƒ± artƒ±rƒ±rken, y√ºksek karbonhidrat diyetleri antrenman kapasitesini 
                artƒ±rƒ±r. Aktivite seviyeniz ne kadar y√ºksekse, o kadar fazla karbonhidrata ihtiyacƒ±nƒ±z vardƒ±r.
              </p>

              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                <strong className="text-orange-400">Yaƒü (1g = 9 kalori):</strong> Enerji yoƒüun bir makrodur ve kalori ba≈üƒ±na en fazla 
                enerji saƒülar. Hormon √ºretimi, beyin saƒülƒ±ƒüƒ±, h√ºcre zarƒ± yapƒ±mƒ± ve yaƒüda √ß√∂z√ºnen vitaminlerin (A, D, E, K) emilimi i√ßin 
                gereklidir. Doymu≈ü yaƒülar (hayvansal yaƒülar), tekli doymamƒ±≈ü yaƒülar (zeytinyaƒüƒ±, avokado) ve √ßoklu doymamƒ±≈ü yaƒülar 
                (balƒ±k yaƒüƒ±, omega-3) olmak √ºzere √º√ß ana t√ºr√º vardƒ±r. Trans yaƒülardan ka√ßƒ±nƒ±lmalƒ±dƒ±r. G√ºnl√ºk kalori alƒ±mƒ±nƒ±n %20-35'i 
                yaƒüdan gelmelidir, ancak keto diyetlerde bu oran %60-70'e √ßƒ±kabilir.
              </p>

              <h3 className="text-3xl font-bold text-white mt-10 mb-4 bg-gradient-to-r from-purple-400 to-pink-500 bg-clip-text text-transparent">
                Farklƒ± Hedefler ƒ∞√ßin Makro Oranlarƒ±
              </h3>
              
              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                <strong className="text-orange-400">Yaƒü Yakma (Fat Loss):</strong> Kalori a√ßƒ±ƒüƒ± olu≈ütururken kas kaybƒ±nƒ± √∂nlemek i√ßin 
                y√ºksek protein (%35-40) √∂nerilir. Orta karbonhidrat (%25-35) antrenman enerjisi saƒülar, d√º≈ü√ºk-orta yaƒü (%25-30) hormon 
                dengesini korur. Protein tokluk hissi verdiƒüi i√ßin a√ßlƒ±ƒüƒ± azaltƒ±r. √ñrnek oran: 40% protein, 30% karbonhidrat, 30% yaƒü. 
                G√ºnl√ºk kalori hedefi genellikle TDEE'nin 300-500 kalori altƒ±ndadƒ±r.
              </p>

              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                <strong className="text-purple-400">Kas Yapma (Muscle Gain):</strong> Kalori fazlasƒ± olu≈ütururken y√ºksek protein 
                (%25-35) kas sentezini destekler. Y√ºksek karbonhidrat (%40-50) yoƒüun antrenmanlar i√ßin enerji saƒülar ve kas glikojen 
                depolarƒ±nƒ± doldurur. Orta yaƒü (%20-30) hormon √ºretimini destekler. √ñrnek oran: 30% protein, 45% karbonhidrat, 25% yaƒü. 
                G√ºnl√ºk kalori hedefi genellikle TDEE'nin 200-400 kalori √ºst√ºndedir. Fazla kalori fazlasƒ± yaƒü birikimine neden olur.
              </p>

              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                <strong className="text-green-400">Kilo Koruma (Maintenance):</strong> Dengeli bir yakla≈üƒ±mdƒ±r. Orta protein (%25-30) 
                kas k√ºtlesini korur, orta karbonhidrat (%35-45) g√ºnl√ºk aktivite i√ßin enerji saƒülar, orta yaƒü (%25-35) hormon dengesini 
                korur. √ñrnek oran: 30% protein, 40% karbonhidrat, 30% yaƒü. G√ºnl√ºk kalori hedefi TDEE'ye e≈üittir. Bu oran uzun vadeli 
                s√ºrd√ºr√ºlebilir ve saƒülƒ±klƒ±dƒ±r.
              </p>

              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                <strong className="text-teal-400">Keto Diyeti:</strong> √áok d√º≈ü√ºk karbonhidrat (%5-10), y√ºksek yaƒü (%60-75), orta 
                protein (%20-30) ile v√ºcudu ketoza sokar. Ketoz durumunda v√ºcut yaƒüƒ± enerji kaynaƒüƒ± olarak kullanƒ±r. ƒ∞ns√ºlin seviyelerini 
                d√º≈ü√ºrd√ºƒü√º i√ßin tip 2 diyabet ve PCOS'ta faydalƒ± olabilir. Ancak antrenman performansƒ±nƒ± azaltabilir ve adaptasyon s√ºreci 
                (keto gribi) 1-2 hafta s√ºrebilir. Net karbonhidrat g√ºnl√ºk 20-50g ile sƒ±nƒ±rlƒ±dƒ±r.
              </p>

              <h3 className="text-3xl font-bold text-white mt-10 mb-4 bg-gradient-to-r from-orange-400 to-red-500 bg-clip-text text-transparent">
                Makrolarƒ± Nasƒ±l Takip Edersiniz?
              </h3>
              
              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                Makro takibi, g√ºnl√ºk yediƒüiniz her besin i√ßin protein, karbonhidrat ve yaƒü miktarƒ±nƒ± kaydetmeyi i√ßerir. MyFitnessPal, 
                Cronometer, Lose It gibi uygulamalar bu s√ºreci kolayla≈ütƒ±rƒ±r. Barkod tarama √∂zelliƒüi ile paketli gƒ±dalarƒ±n makrolarƒ±nƒ± 
                hƒ±zlƒ±ca girebilirsiniz. Ev yapƒ±mƒ± yemekler i√ßin tarif olu≈üturabilir ve porsiyon ba≈üƒ±na makrolarƒ± hesaplayabilirsiniz. 
                Hassas sonu√ßlar i√ßin dijital mutfak terazisi kullanmak √∂nemlidir; g√∂z kararƒ± tahminler %30-50 hata payƒ±na sahip olabilir.
              </p>

              <p className="text-gray-300 leading-relaxed mb-6 text-lg">
                ƒ∞lk ba≈üta her ≈üeyi tartmak zor gelebilir, ancak 2-3 hafta sonra √ßoƒüu insanƒ±n zihinsel bir veri tabanƒ± olu≈üur ve tahminleri 
                daha doƒüru hale gelir. G√ºnl√ºk makro hedeflerinize %90-95 doƒürulukla ula≈ümak yeterlidir; m√ºkemmeliyet√ßilik strese neden 
                olabilir. Haftalƒ±k ortalamaya bakmak daha saƒülƒ±klƒ±dƒ±r √ß√ºnk√º bazƒ± g√ºnler hedefin √ºst√ºnde, bazƒ± g√ºnler altƒ±nda kalabilirsiniz. 
                √ñnemli olan uzun vadeli tutarlƒ±lƒ±ktƒ±r.
              </p>

              <h3 className="text-3xl font-bold text-white mt-10 mb-4 bg-gradient-to-r from-blue-400 to-indigo-500 bg-clip-text text-transparent">
                Makro Zamanlamasƒ± (Nutrient Timing)
              </h3>
              
              <p className="text-gray-300 leading-relaxed text-lg">
                G√ºn√ºn hangi saatinde hangi makroyu t√ºkettiƒüiniz de √∂nemli olabilir, ancak toplam g√ºnl√ºk t√ºketim kadar kritik deƒüildir. 
                <strong> Kahvaltƒ±da protein</strong> tokluk hissini artƒ±rƒ±r ve g√ºn boyunca kalori alƒ±mƒ±nƒ± azaltƒ±r. <strong>Egzersiz 
                √∂ncesi karbonhidrat</strong> (1-3 saat √∂nce) performansƒ± artƒ±rƒ±r; basit karbonhidratlar hƒ±zlƒ± enerji, kompleks 
                karbonhidratlar uzun s√ºreli enerji saƒülar. <strong>Egzersiz sonrasƒ± protein + karbonhidrat</strong> (30-120 dakika i√ßinde) 
                kas onarƒ±mƒ±nƒ± hƒ±zlandƒ±rƒ±r ve glikojen depolarƒ±nƒ± yeniler; bu "anabolik pencere" tartƒ±≈ümalƒ±dƒ±r ancak faydalƒ± olabilir. 
                <strong> Yatmadan √∂nce protein</strong> (kazein gibi yava≈ü sindirilen) geceleyin kas sentezini destekler. G√ºnl√ºk 
                makro hedeflerinize ula≈ümak zamanlamadan daha √∂nemlidir, ancak bu detaylar %10-15 ekstra avantaj saƒülayabilir.
              </p>

              <div className="mt-12 text-center">
                <a 
                  href="/hesaplayicilar" 
                  className="inline-flex items-center gap-3 px-8 py-4 rounded-2xl bg-gradient-to-r from-teal-500 to-cyan-600 text-white font-bold text-lg hover:from-teal-600 hover:to-cyan-700 shadow-2xl shadow-teal-500/50 border border-teal-400/30 hover:scale-105 transition-all duration-300"
                >
                  Diƒüer Hesaplayƒ±cƒ±larƒ± G√∂r
                </a>
              </div>
            </div>
          </article>
        </div>
      </main>
      
      <Footer />
    </div>
  );
}
