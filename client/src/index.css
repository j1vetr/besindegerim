@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 40 4% 96%;

  --foreground: 40 8% 15%;

  --border: 40 5% 85%;

  --card: 40 6% 98%;

  --card-foreground: 40 8% 15%;

  --card-border: 40 6% 92%;

  --sidebar: 40 5% 94%;

  --sidebar-foreground: 40 8% 15%;

  --sidebar-border: 40 6% 88%;

  --sidebar-primary: 142 55% 42%;

  --sidebar-primary-foreground: 142 55% 98%;

  --sidebar-accent: 40 8% 88%;

  --sidebar-accent-foreground: 40 8% 20%;

  --sidebar-ring: 142 55% 42%;

  --popover: 40 6% 96%;

  --popover-foreground: 40 8% 15%;

  --popover-border: 40 6% 90%;

  --primary: 142 55% 42%;

  --primary-foreground: 142 55% 98%;

  --secondary: 40 8% 90%;

  --secondary-foreground: 40 8% 20%;

  --muted: 40 10% 92%;

  --muted-foreground: 40 8% 35%;

  --accent: 142 18% 88%;

  --accent-foreground: 142 20% 25%;

  --destructive: 0 65% 45%;

  --destructive-foreground: 0 65% 98%;

  --input: 40 8% 70%;
  --ring: 142 55% 42%;
  --chart-1: 142 55% 42%;
  --chart-2: 172 50% 45%;
  --chart-3: 202 45% 48%;
  --chart-4: 40 60% 50%;
  --chart-5: 28 65% 52%;

  --font-sans: Inter, system-ui, -apple-system, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(40 8% 15% / 0.04);
  --shadow-xs: 0px 1px 2px 0px hsl(40 8% 15% / 0.06);
  --shadow-sm: 0px 1px 3px 0px hsl(40 8% 15% / 0.08), 0px 1px 2px -1px hsl(40 8% 15% / 0.08);
  --shadow: 0px 2px 4px 0px hsl(40 8% 15% / 0.08), 0px 1px 2px -1px hsl(40 8% 15% / 0.08);
  --shadow-md: 0px 4px 6px -1px hsl(40 8% 15% / 0.08), 0px 2px 4px -2px hsl(40 8% 15% / 0.08);
  --shadow-lg: 0px 10px 15px -3px hsl(40 8% 15% / 0.08), 0px 4px 6px -4px hsl(40 8% 15% / 0.08);
  --shadow-xl: 0px 20px 25px -5px hsl(40 8% 15% / 0.08), 0px 8px 10px -6px hsl(40 8% 15% / 0.08);
  --shadow-2xl: 0px 25px 50px -12px hsl(40 8% 15% / 0.12);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 40 3% 8%;

  --foreground: 40 4% 88%;

  --border: 40 4% 18%;

  --card: 40 3% 10%;

  --card-foreground: 40 4% 88%;

  --card-border: 40 4% 14%;

  --sidebar: 40 3% 12%;

  --sidebar-foreground: 40 4% 88%;

  --sidebar-border: 40 4% 16%;

  --sidebar-primary: 142 50% 45%;

  --sidebar-primary-foreground: 142 50% 98%;

  --sidebar-accent: 40 6% 18%;

  --sidebar-accent-foreground: 40 6% 85%;

  --sidebar-ring: 142 50% 45%;

  --popover: 40 3% 14%;

  --popover-foreground: 40 4% 88%;

  --popover-border: 40 4% 18%;

  --primary: 142 50% 45%;

  --primary-foreground: 142 50% 98%;

  --secondary: 40 6% 20%;

  --secondary-foreground: 40 6% 85%;

  --muted: 40 8% 16%;

  --muted-foreground: 40 8% 65%;

  --accent: 142 15% 20%;

  --accent-foreground: 142 15% 80%;

  --destructive: 0 60% 48%;

  --destructive-foreground: 0 60% 98%;

  --input: 40 6% 32%;
  --ring: 142 50% 45%;
  --chart-1: 142 50% 60%;
  --chart-2: 172 45% 62%;
  --chart-3: 202 40% 65%;
  --chart-4: 40 55% 65%;
  --chart-5: 28 60% 68%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.20);
  --shadow-xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.24);
  --shadow-sm: 0px 1px 3px 0px hsl(0 0% 0% / 0.28), 0px 1px 2px -1px hsl(0 0% 0% / 0.28);
  --shadow: 0px 2px 4px 0px hsl(0 0% 0% / 0.28), 0px 1px 2px -1px hsl(0 0% 0% / 0.28);
  --shadow-md: 0px 4px 6px -1px hsl(0 0% 0% / 0.28), 0px 2px 4px -2px hsl(0 0% 0% / 0.28);
  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.28), 0px 4px 6px -4px hsl(0 0% 0% / 0.28);
  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.30), 0px 8px 10px -6px hsl(0 0% 0% / 0.30);
  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.35);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

@layer components {
  .shadcn-card {
    border-radius: 0.75rem; /* 12px - rounded-xl */
    box-shadow: var(--shadow-sm);
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Floating Animations for Food Icons */
  @keyframes float-slow {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-20px) rotate(5deg);
    }
  }

  @keyframes float-medium {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-30px) rotate(-5deg);
    }
  }

  @keyframes float-slower {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-15px) rotate(3deg);
    }
  }

  .animate-float-slow {
    animation: float-slow 6s ease-in-out infinite;
  }

  .animate-float-medium {
    animation: float-medium 7s ease-in-out infinite;
  }

  .animate-float-slower {
    animation: float-slower 8s ease-in-out infinite;
  }

  /* Hide scrollbar */
  .scrollbar-hide {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none;  /* Chrome, Safari and Opera */
  }

  /* ===== FUTURISTIC EFFECTS ===== */
  
  /* Neon Glow Animation */
  @keyframes neon-pulse {
    0%, 100% {
      box-shadow: 0 0 20px rgba(34, 197, 94, 0.4),
                  0 0 40px rgba(34, 197, 94, 0.2),
                  inset 0 0 20px rgba(34, 197, 94, 0.05);
    }
    50% {
      box-shadow: 0 0 30px rgba(34, 197, 94, 0.6),
                  0 0 60px rgba(34, 197, 94, 0.3),
                  inset 0 0 30px rgba(34, 197, 94, 0.1);
    }
  }

  .neon-glow {
    animation: neon-pulse 3s ease-in-out infinite;
    border: 1px solid rgba(34, 197, 94, 0.5);
  }

  .neon-glow-static {
    box-shadow: 0 0 20px rgba(34, 197, 94, 0.4),
                0 0 40px rgba(34, 197, 94, 0.2),
                inset 0 0 15px rgba(34, 197, 94, 0.05);
    border: 1px solid rgba(34, 197, 94, 0.5);
  }

  /* Holographic Gradient Shift */
  @keyframes holographic-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .holographic-bg {
    background: linear-gradient(
      135deg,
      #667eea 0%,
      #764ba2 20%,
      #f093fb 40%,
      #4facfe 60%,
      #00f2fe 80%,
      #667eea 100%
    );
    background-size: 400% 400%;
    animation: holographic-shift 15s ease infinite;
  }

  .holographic-text {
    background: linear-gradient(
      135deg,
      #22c55e 0%,
      #10b981 25%,
      #14b8a6 50%,
      #06b6d4 75%,
      #22c55e 100%
    );
    background-size: 200% 200%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: holographic-shift 8s ease infinite;
  }

  /* Gradient Shine Animation */
  @keyframes gradient-shine {
    0% { background-position: -200% center; }
    100% { background-position: 200% center; }
  }

  .gradient-shine {
    background: linear-gradient(
      90deg,
      transparent 0%,
      transparent 40%,
      rgba(255, 255, 255, 0.8) 50%,
      transparent 60%,
      transparent 100%
    );
    background-size: 200% 100%;
    animation: gradient-shine 3s linear infinite;
  }

  /* 3D Card Tilt Effect */
  .card-3d {
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
  }

  .card-3d:hover {
    transform: perspective(1000px) rotateX(5deg) rotateY(-5deg) translateY(-10px);
  }

  /* Floating Glow Particles */
  @keyframes particle-float {
    0%, 100% {
      transform: translateY(0px) translateX(0px);
      opacity: 0.3;
    }
    50% {
      transform: translateY(-30px) translateX(15px);
      opacity: 0.6;
    }
  }

  .particle-bg::before {
    content: '';
    position: absolute;
    width: 200px;
    height: 200px;
    background: radial-gradient(circle, rgba(34, 197, 94, 0.3) 0%, transparent 70%);
    border-radius: 50%;
    top: 20%;
    right: 10%;
    animation: particle-float 8s ease-in-out infinite;
    pointer-events: none;
  }

  .particle-bg::after {
    content: '';
    position: absolute;
    width: 150px;
    height: 150px;
    background: radial-gradient(circle, rgba(16, 185, 129, 0.2) 0%, transparent 70%);
    border-radius: 50%;
    bottom: 15%;
    left: 15%;
    animation: particle-float 10s ease-in-out infinite reverse;
    pointer-events: none;
  }

  /* Counter Animation */
  @keyframes counter-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .counter-animated {
    animation: counter-up 0.6s ease-out;
  }

  /* Pulse Scale Animation */
  @keyframes pulse-scale {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
  }

  .pulse-scale {
    animation: pulse-scale 2s ease-in-out infinite;
  }

  /* Ripple Effect on Click */
  @keyframes ripple {
    0% {
      transform: scale(0);
      opacity: 1;
    }
    100% {
      transform: scale(4);
      opacity: 0;
    }
  }

  .ripple-effect {
    position: relative;
    overflow: hidden;
  }

  .ripple-effect::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    background: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    transform: scale(0);
    pointer-events: none;
  }

  .ripple-effect:active::after {
    animation: ripple 0.6s ease-out;
  }

  /* Glow Border Hover */
  .glow-border-hover {
    position: relative;
    border: 2px solid transparent;
    background: linear-gradient(white, white) padding-box,
                linear-gradient(135deg, #22c55e, #10b981) border-box;
    transition: all 0.3s ease;
  }

  .glow-border-hover:hover {
    box-shadow: 0 0 30px rgba(34, 197, 94, 0.5),
                inset 0 0 20px rgba(34, 197, 94, 0.1);
  }

  /* Shimmer Loading */
  @keyframes shimmer {
    0% {
      background-position: -1000px 0;
    }
    100% {
      background-position: 1000px 0;
    }
  }

  .shimmer {
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.2) 20%,
      rgba(255, 255, 255, 0.5) 60%,
      rgba(255, 255, 255, 0)
    );
    background-size: 1000px 100%;
    animation: shimmer 2s infinite;
  }

  /* Scan Line Effect */
  @keyframes scan-line {
    0% {
      top: 0%;
    }
    100% {
      top: 100%;
    }
  }

  .scan-effect {
    position: relative;
    overflow: hidden;
  }

  .scan-effect::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(34, 197, 94, 0.8), transparent);
    animation: scan-line 3s linear infinite;
    z-index: 10;
  }

  /* Glass Morphism Enhanced */
  .glass-morph {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px) saturate(180%);
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
  }

  .glass-morph-dark {
    background: rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(20px) saturate(180%);
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
}